@page "/MineSweeper"
@rendermode InteractiveServer 

<PageTitle>MineSweeper</PageTitle>

<h1>MineSweeper.</h1>

<hr />

<div class="GameWindow"> 

   <div class="GameHeader">
	 
	   <div>Is Game In Play...</div>

   </div>
   
   <div class="GameDisplay">
		@for (int x = 0; x < mineField.cellData.GetLength(0); x++)
		{
			<div>
			@for (int y = 0; y < mineField.cellData.GetLength(1); y++)
			{
					var text = " ";

					var gridReffX = x;
					var gridReffY = y;

					if(mineField.cellData[x,y].State==CellState.Hidden)
					{ text = " "; }
					else if (mineField.cellData[x, y].State == CellState.Flagged)
					{ text = "F"; }
					else if (mineField.cellData[x, y].DoesCellContainsAMine)
					{ text = "X"; }
					else { text = mineField.cellData[x, y].AdjacentMineCount.ToString(); }

					<button 
						
						class="Cell" 

						@onclick=" e => mineField.HandleLeftClickEvent(gridReffX,gridReffY)"
							
						@* @onpointerdown="e=>mineField.HandleLeftClickHoldEvent(gridReffX,gridReffY)"
						@onpointerup="e => mineField.HandleLeftClickHoldUpEvent(gridReffX,gridReffY)" *@

						@oncontextmenu:preventDefault="true"
						@oncontextmenu="e => mineField.HandleRightClickEvent(gridReffX,gridReffY)"
						
					>@text</button>
			}
			</div>
		}
	</div>

   <div class="Footer"></div>

</div>

<hr />

@code {

	GameSettings settings;
	MineField mineField;

	protected override void OnInitialized()
	{
		settings = new GameSettings();
		settings.XLength = 10;
		settings.YHeight = 5;
		settings.NumberOfMines = 6;

		mineField = new MineField(settings);
	}

	


}
